var search_data = {"index":{"searchIndex":["keymap","adapternotfound","adapternotspecified","base","connectionadapters","abstractadapter","connectionhandler","connectionmanagement","connectionpool","redisadapter","redishash","redislist","transactionmanagement","connectionnotestablished","connectiontimeouterror","keymaperror","rollback","<<()","[]()","[]()","[]=()","[]=()","active?()","active?()","active_connection?()","active_connections()","active_connections?()","adapter_name()","adapter_name()","begin_db_transaction()","begin_db_transaction()","call()","checkin()","checkout()","checkout_and_verify()","checkout_new_connection()","clear_active_connections!()","clear_active_connections!()","clear_all_connections!()","clear_cache!()","clear_reloadable_connections!()","clear_reloadable_connections!()","clear_stale_cached_connections!()","close()","commit_db_transaction()","commit_db_transaction()","concat()","configurations()","connect()","connected?()","connected?()","connected?()","connection()","connection()","connection()","connection_config()","connection_handler()","connection_id()","connection_id=()","connection_pool()","delete()","delete()","delete()","delete_if()","disconnect!()","disconnect!()","disconnect!()","each()","each()","each_pair()","each_value()","empty?()","empty?()","env()","env=()","establish_connection()","establish_connection()","expire()","hash()","hash_keys()","lease()","length()","list()","logger()","merge()","merge!()","new()","new()","new()","new()","new()","new()","new()","new_connection()","outside_transaction?()","pop()","push()","raw_connection()","reconnect!()","reconnect!()","redis_connection()","release()","release_connection()","remove_connection()","remove_connection()","requires_reloading?()","reset!()","reset!()","retrieve_connection()","retrieve_connection_pool()","rollback_db_transaction()","rollback_db_transaction()","size()","transaction()","verify!()","with_connection()","readme"],"longSearchIndex":["keymap","keymap::adapternotfound","keymap::adapternotspecified","keymap::base","keymap::connectionadapters","keymap::connectionadapters::abstractadapter","keymap::connectionadapters::connectionhandler","keymap::connectionadapters::connectionmanagement","keymap::connectionadapters::connectionpool","keymap::connectionadapters::redisadapter","keymap::connectionadapters::redisadapter::redishash","keymap::connectionadapters::redisadapter::redislist","keymap::connectionadapters::transactionmanagement","keymap::connectionnotestablished","keymap::connectiontimeouterror","keymap::keymaperror","keymap::rollback","keymap::connectionadapters::redisadapter::redislist#<<()","keymap::connectionadapters::redisadapter::redishash#[]()","keymap::connectionadapters::redisadapter::redislist#[]()","keymap::connectionadapters::redisadapter::redishash#[]=()","keymap::connectionadapters::redisadapter::redislist#[]=()","keymap::connectionadapters::abstractadapter#active?()","keymap::connectionadapters::redisadapter#active?()","keymap::connectionadapters::connectionpool#active_connection?()","keymap::connectionadapters::connectionpool#active_connections()","keymap::connectionadapters::connectionhandler#active_connections?()","keymap::connectionadapters::abstractadapter#adapter_name()","keymap::connectionadapters::redisadapter#adapter_name()","keymap::connectionadapters::abstractadapter#begin_db_transaction()","keymap::connectionadapters::redisadapter#begin_db_transaction()","keymap::connectionadapters::connectionmanagement#call()","keymap::connectionadapters::connectionpool#checkin()","keymap::connectionadapters::connectionpool#checkout()","keymap::connectionadapters::connectionpool#checkout_and_verify()","keymap::connectionadapters::connectionpool#checkout_new_connection()","keymap::base::clear_active_connections!()","keymap::connectionadapters::connectionhandler#clear_active_connections!()","keymap::connectionadapters::connectionhandler#clear_all_connections!()","keymap::connectionadapters::abstractadapter#clear_cache!()","keymap::connectionadapters::connectionhandler#clear_reloadable_connections!()","keymap::connectionadapters::connectionpool#clear_reloadable_connections!()","keymap::connectionadapters::connectionpool#clear_stale_cached_connections!()","keymap::connectionadapters::abstractadapter#close()","keymap::connectionadapters::abstractadapter#commit_db_transaction()","keymap::connectionadapters::redisadapter#commit_db_transaction()","keymap::connectionadapters::redisadapter::redislist#concat()","keymap::base::configurations()","keymap::connectionadapters::redisadapter#connect()","keymap::base::connected?()","keymap::connectionadapters::connectionhandler#connected?()","keymap::connectionadapters::connectionpool#connected?()","keymap::base::connection()","keymap::base#connection()","keymap::connectionadapters::connectionpool#connection()","keymap::base::connection_config()","keymap::base::connection_handler()","keymap::base::connection_id()","keymap::base::connection_id=()","keymap::base::connection_pool()","keymap::connectionadapters::redisadapter#delete()","keymap::connectionadapters::redisadapter::redishash#delete()","keymap::connectionadapters::redisadapter::redislist#delete()","keymap::connectionadapters::redisadapter::redislist#delete_if()","keymap::connectionadapters::abstractadapter#disconnect!()","keymap::connectionadapters::connectionpool#disconnect!()","keymap::connectionadapters::redisadapter#disconnect!()","keymap::connectionadapters::redisadapter::redishash#each()","keymap::connectionadapters::redisadapter::redislist#each()","keymap::connectionadapters::redisadapter::redishash#each_pair()","keymap::connectionadapters::redisadapter::redishash#each_value()","keymap::connectionadapters::redisadapter::redishash#empty?()","keymap::connectionadapters::redisadapter::redislist#empty?()","keymap#env()","keymap#env=()","keymap::base::establish_connection()","keymap::connectionadapters::connectionhandler#establish_connection()","keymap::connectionadapters::abstractadapter#expire()","keymap::connectionadapters::redisadapter#hash()","keymap::connectionadapters::redisadapter::redishash#hash_keys()","keymap::connectionadapters::abstractadapter#lease()","keymap::connectionadapters::redisadapter::redislist#length()","keymap::connectionadapters::redisadapter#list()","keymap::base::logger()","keymap::connectionadapters::redisadapter::redishash#merge()","keymap::connectionadapters::redisadapter::redishash#merge!()","keymap::base::new()","keymap::connectionadapters::connectionhandler::new()","keymap::connectionadapters::connectionmanagement::new()","keymap::connectionadapters::connectionpool::new()","keymap::connectionadapters::redisadapter::new()","keymap::connectionadapters::redisadapter::redishash::new()","keymap::connectionadapters::redisadapter::redislist::new()","keymap::connectionadapters::connectionpool#new_connection()","keymap::connectionadapters::transactionmanagement#outside_transaction?()","keymap::connectionadapters::redisadapter::redislist#pop()","keymap::connectionadapters::redisadapter::redislist#push()","keymap::connectionadapters::abstractadapter#raw_connection()","keymap::connectionadapters::abstractadapter#reconnect!()","keymap::connectionadapters::redisadapter#reconnect!()","keymap::base::redis_connection()","keymap::connectionadapters::connectionpool#release()","keymap::connectionadapters::connectionpool#release_connection()","keymap::base::remove_connection()","keymap::connectionadapters::connectionhandler#remove_connection()","keymap::connectionadapters::abstractadapter#requires_reloading?()","keymap::connectionadapters::abstractadapter#reset!()","keymap::connectionadapters::redisadapter#reset!()","keymap::base::retrieve_connection()","keymap::connectionadapters::connectionhandler#retrieve_connection_pool()","keymap::connectionadapters::abstractadapter#rollback_db_transaction()","keymap::connectionadapters::redisadapter#rollback_db_transaction()","keymap::connectionadapters::redisadapter::redislist#size()","keymap::connectionadapters::transactionmanagement#transaction()","keymap::connectionadapters::abstractadapter#verify!()","keymap::connectionadapters::connectionpool#with_connection()",""],"info":[["Keymap","","Keymap.html","",""],["Keymap::AdapterNotFound","","Keymap/AdapterNotFound.html","","<p>Raised when Keymap cannot find database adapter specified in\n<code>config/database.yml</code> or programmatically. …\n"],["Keymap::AdapterNotSpecified","","Keymap/AdapterNotSpecified.html","","<p>Raised when adapter not specified on connection (or configuration file\n<code>config/database.yml</code> misses adapter …\n"],["Keymap::Base","","Keymap/Base.html","",""],["Keymap::ConnectionAdapters","","Keymap/ConnectionAdapters.html","",""],["Keymap::ConnectionAdapters::AbstractAdapter","","Keymap/ConnectionAdapters/AbstractAdapter.html","",""],["Keymap::ConnectionAdapters::ConnectionHandler","","Keymap/ConnectionAdapters/ConnectionHandler.html","","<p>ConnectionHandler is a collection of ConnectionPool objects. It is used for\nkeeping separate connection …\n"],["Keymap::ConnectionAdapters::ConnectionManagement","","Keymap/ConnectionAdapters/ConnectionManagement.html","",""],["Keymap::ConnectionAdapters::ConnectionPool","","Keymap/ConnectionAdapters/ConnectionPool.html","","<p>Connection pool base class for managing connections.\n<p>Introduction\n<p>A connection pool synchronizes thread …\n"],["Keymap::ConnectionAdapters::RedisAdapter","","Keymap/ConnectionAdapters/RedisAdapter.html","",""],["Keymap::ConnectionAdapters::RedisAdapter::RedisHash","","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html","",""],["Keymap::ConnectionAdapters::RedisAdapter::RedisList","","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html","",""],["Keymap::ConnectionAdapters::TransactionManagement","","Keymap/ConnectionAdapters/TransactionManagement.html","",""],["Keymap::ConnectionNotEstablished","","Keymap/ConnectionNotEstablished.html","","<p>Raised when connection to the database could not been established (for\nexample when <code>connection=</code> is given …\n"],["Keymap::ConnectionTimeoutError","","Keymap/ConnectionTimeoutError.html","","<p>Raised when a connection could not be obtained within the connection\nacquisition timeout period.\n"],["Keymap::KeymapError","","Keymap/KeymapError.html","","<p>Generic Keymap exception class.\n"],["Keymap::Rollback","","Keymap/Rollback.html","","<p>The library uses this exception to distinguish a deliberate rollback from\nother exceptional situations. …\n"],["<<","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-3C-3C","(value)",""],["[]","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-i-5B-5D","(key)",""],["[]","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-5B-5D","(index)",""],["[]=","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-i-5B-5D-3D","(key, value)",""],["[]=","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-5B-5D-3D","(index, value)",""],["active?","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-active-3F","()","<p>Checks whether the connection to the database is still active. This\nincludes checking whether the kv-store …\n"],["active?","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-active-3F","()",""],["active_connection?","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-active_connection-3F","()","<p>Is there an open connection that is being used for the current thread?\n"],["active_connections","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-active_connections","()",""],["active_connections?","Keymap::ConnectionAdapters::ConnectionHandler","Keymap/ConnectionAdapters/ConnectionHandler.html#method-i-active_connections-3F","()","<p>Returns true if there are any active connections among the connection pools\nthat the ConnectionHandler …\n"],["adapter_name","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-adapter_name","()","<p>Returns the human-readable name of the adapter. Use mixed case - one can\nalways use downcase if needed. …\n"],["adapter_name","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-adapter_name","()",""],["begin_db_transaction","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-begin_db_transaction","()","<p>Begins the transaction (and turns off auto-committing).\n"],["begin_db_transaction","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-begin_db_transaction","()",""],["call","Keymap::ConnectionAdapters::ConnectionManagement","Keymap/ConnectionAdapters/ConnectionManagement.html#method-i-call","(env)",""],["checkin","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-checkin","(conn)","<p>Check-in a database connection back into the pool, indicating that you no\nlonger need this connection. …\n"],["checkout","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-checkout","()","<p>Check-out a database connection from the pool, indicating that you want to\nuse it. You should call #checkin …\n"],["checkout_and_verify","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-checkout_and_verify","(c)",""],["checkout_new_connection","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-checkout_new_connection","()",""],["clear_active_connections!","Keymap::Base","Keymap/Base.html#method-c-clear_active_connections-21","()",""],["clear_active_connections!","Keymap::ConnectionAdapters::ConnectionHandler","Keymap/ConnectionAdapters/ConnectionHandler.html#method-i-clear_active_connections-21","()","<p>Returns any connections in use by the current thread back to the pool.\n"],["clear_all_connections!","Keymap::ConnectionAdapters::ConnectionHandler","Keymap/ConnectionAdapters/ConnectionHandler.html#method-i-clear_all_connections-21","()",""],["clear_cache!","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-clear_cache-21","()","<p>Clear any caching the kv-store adapter may be doing. This is kv-store\nspecific.\n"],["clear_reloadable_connections!","Keymap::ConnectionAdapters::ConnectionHandler","Keymap/ConnectionAdapters/ConnectionHandler.html#method-i-clear_reloadable_connections-21","()","<p>Clears the cache which maps classes.\n"],["clear_reloadable_connections!","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-clear_reloadable_connections-21","()","<p>Clears the cache which maps classes.\n"],["clear_stale_cached_connections!","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-clear_stale_cached_connections-21","()","<p>Return any checked-out connections back to the pool by threads that are no\nlonger alive.\n"],["close","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-close","()","<p>Check the connection back in to the connection pool\n"],["commit_db_transaction","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-commit_db_transaction","()","<p>Commits the transaction (and turns on auto-committing).\n"],["commit_db_transaction","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-commit_db_transaction","()",""],["concat","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-concat","(array)",""],["configurations","Keymap::Base","Keymap/Base.html#method-c-configurations","","<p>Contains the database configuration - as is typically stored in\nconfig/database.yml - as a Hash.\n<p>For example, …\n"],["connect","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-connect","()",""],["connected?","Keymap::Base","Keymap/Base.html#method-c-connected-3F","()","<p>Returns true if Keymap is connected.\n"],["connected?","Keymap::ConnectionAdapters::ConnectionHandler","Keymap/ConnectionAdapters/ConnectionHandler.html#method-i-connected-3F","(klass)","<p>Returns true if a connection that’s accessible to this class has already\nbeen opened.\n"],["connected?","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-connected-3F","()","<p>Returns true if a connection has already been opened.\n"],["connection","Keymap::Base","Keymap/Base.html#method-c-connection","()","<p>Returns the connection currently associated with the class. This can also\nbe used to “borrow” …\n"],["connection","Keymap::Base","Keymap/Base.html#method-i-connection","()",""],["connection","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-connection","()","<p>Retrieve the connection associated with the current thread, or call\n#checkout to obtain one if necessary. …\n"],["connection_config","Keymap::Base","Keymap/Base.html#method-c-connection_config","()","<p>Returns the configuration of the associated connection as a hash:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Keymap</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>.<span class=\"ruby-identifier\">connection_config</span>\n<span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n"],["connection_handler","Keymap::Base","Keymap/Base.html#method-c-connection_handler","","<p>The connection handler\n"],["connection_id","Keymap::Base","Keymap/Base.html#method-c-connection_id","()",""],["connection_id=","Keymap::Base","Keymap/Base.html#method-c-connection_id-3D","(connection_id)",""],["connection_pool","Keymap::Base","Keymap/Base.html#method-c-connection_pool","()",""],["delete","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-delete","(id)",""],["delete","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-i-delete","(key)",""],["delete","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-delete","(value)",""],["delete_if","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-delete_if","()",""],["disconnect!","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the kv-store if already connected. Otherwise, this method\ndoes nothing.\n"],["disconnect!","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-disconnect-21","()","<p>Disconnects all connections in the pool, and clears the pool.\n"],["disconnect!","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n"],["each","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-i-each","()",""],["each","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-each","()",""],["each_pair","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-i-each_pair","()",""],["each_value","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-i-each_value","()",""],["empty?","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-i-empty-3F","()",""],["empty?","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-empty-3F","()",""],["env","Keymap","Keymap.html#method-i-env","()",""],["env=","Keymap","Keymap.html#method-i-env-3D","(environment)",""],["establish_connection","Keymap::Base","Keymap/Base.html#method-c-establish_connection","(spec = ENV[\"DATABASE_URL\"])",""],["establish_connection","Keymap::ConnectionAdapters::ConnectionHandler","Keymap/ConnectionAdapters/ConnectionHandler.html#method-i-establish_connection","(name, spec)",""],["expire","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-expire","()",""],["hash","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-hash","(id)",""],["hash_keys","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-i-hash_keys","()",""],["lease","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-lease","()",""],["length","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-length","()",""],["list","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-list","(id)",""],["logger","Keymap::Base","Keymap/Base.html#method-c-logger","","<p>Accepts a logger conforming to the interface of Log4r or the default Ruby\n1.8+ Logger class, which is …\n"],["merge","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-i-merge","(hash)",""],["merge!","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-i-merge-21","(hash)",""],["new","Keymap::Base","Keymap/Base.html#method-c-new","(attributes = nil, options = {})",""],["new","Keymap::ConnectionAdapters::ConnectionHandler","Keymap/ConnectionAdapters/ConnectionHandler.html#method-c-new","(pools = {})",""],["new","Keymap::ConnectionAdapters::ConnectionManagement","Keymap/ConnectionAdapters/ConnectionManagement.html#method-c-new","(app)",""],["new","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-c-new","(spec)","<p>Creates a new ConnectionPool object. <code>spec</code> is a\nConnectionSpecification object which describes database …\n"],["new","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-c-new","(connection, pool, config)",""],["new","Keymap::ConnectionAdapters::RedisAdapter::RedisHash","Keymap/ConnectionAdapters/RedisAdapter/RedisHash.html#method-c-new","(connection, id, sentinel=nil)","<p>n.b. nil gets represented as an empty string by redis, so the two are in\neffect identical keys.\n"],["new","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-c-new","(connection, id, sentinel=nil)",""],["new_connection","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-new_connection","()",""],["outside_transaction?","Keymap::ConnectionAdapters::TransactionManagement","Keymap/ConnectionAdapters/TransactionManagement.html#method-i-outside_transaction-3F","()","<p>Checks whether there is currently no transaction active. This is done by\nquerying the database driver, …\n"],["pop","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-pop","()",""],["push","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-push","(value)",""],["raw_connection","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-raw_connection","()","<p>Provides access to the underlying kv-store driver for this adapter. For\nexample, this method returns …\n"],["reconnect!","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-reconnect-21","()","<p>Disconnects from the database if already connected, and establishes a new\nconnection with the database. …\n"],["reconnect!","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-reconnect-21","()",""],["redis_connection","Keymap::Base","Keymap/Base.html#method-c-redis_connection","(config)",""],["release","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-release","(conn)",""],["release_connection","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-release_connection","(with_id = current_connection_id)","<p>Signal that the thread is finished with the current connection.\n#release_connection releases the connection-thread …\n"],["remove_connection","Keymap::Base","Keymap/Base.html#method-c-remove_connection","(klass = self)",""],["remove_connection","Keymap::ConnectionAdapters::ConnectionHandler","Keymap/ConnectionAdapters/ConnectionHandler.html#method-i-remove_connection","(klass)","<p>Remove the connection for this class. This will close the active connection\nand the defined connection …\n"],["requires_reloading?","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-requires_reloading-3F","()","<p>Returns true if its required to reload the connection between requests for\ndevelopment mode.\n"],["reset!","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-reset-21","()","<p>Reset the state of this connection, directing the kv-store to clear\ntransactions and other connection-related …\n"],["reset!","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-reset-21","()",""],["retrieve_connection","Keymap::Base","Keymap/Base.html#method-c-retrieve_connection","()",""],["retrieve_connection_pool","Keymap::ConnectionAdapters::ConnectionHandler","Keymap/ConnectionAdapters/ConnectionHandler.html#method-i-retrieve_connection_pool","(klass)",""],["rollback_db_transaction","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-rollback_db_transaction","()","<p>Rolls back the transaction (and turns on auto-committing). Must be done if\nthe transaction block raises …\n"],["rollback_db_transaction","Keymap::ConnectionAdapters::RedisAdapter","Keymap/ConnectionAdapters/RedisAdapter.html#method-i-rollback_db_transaction","()",""],["size","Keymap::ConnectionAdapters::RedisAdapter::RedisList","Keymap/ConnectionAdapters/RedisAdapter/RedisList.html#method-i-size","()",""],["transaction","Keymap::ConnectionAdapters::TransactionManagement","Keymap/ConnectionAdapters/TransactionManagement.html#method-i-transaction","(options = {})","<p>Runs the given block in a database transaction, and returns the result of\nthe block.\n"],["verify!","Keymap::ConnectionAdapters::AbstractAdapter","Keymap/ConnectionAdapters/AbstractAdapter.html#method-i-verify-21","()","<p>Checks whether the connection to the kv-store is still active (i.e. not\nstale). This is done under the …\n"],["with_connection","Keymap::ConnectionAdapters::ConnectionPool","Keymap/ConnectionAdapters/ConnectionPool.html#method-i-with_connection","()","<p>If a connection already exists yield it to the block. If no connection\nexists checkout a connection, …\n"],["README","","README_rdoc.html","","<p>Keymap\n<p><img src=“https://secure.travis-ci.org/rbuck/keymap.png?branch=master”\nalt=“Continuous Integration …\n"]]}}